{"version":3,"sources":["components/Header.js","components/FilterBar.js","components/ListHeader.js","components/List.js","utils/API.js","App.js","index.js"],"names":["Header","className","FilterBar","props","placeholder","ListHeader","data-sort","sortOpt","onClick","List","thumbnail","first","last","phone","email","date","list","map","employee","idx","picture","dob","name","alt","src","Date","toLocaleDateString","API","getEmployees","cb","fetch","then","res","json","results","catch","App","useState","employeeList","setEmployeeList","displayList","setDisplayList","filter","setFilter","setSortOpt","useEffect","sortedFiltered","concat","sort","a","b","aVal","bVal","applySort","trim","e","toLowerCase","indexOf","value","onChange","evt","target","currentTarget","nodeName","curSortOpt","dataset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c489386b.chunk.js","sourcesContent":["function Header() {\r\n  return (\r\n    <header className=\"container-fluid text-center bg-secondary pb-1 mb-2\">\r\n      <h1>Employee Directory</h1>\r\n      <p>Click on the <code className=\"font-weight-bold text-body\">Name</code> field title to toggle sorting.</p>\r\n      <p>Use the input box above the <code className=\"font-weight-bold text-body\">Name</code> field to filter the Employees' names.</p>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","function FilterBar(props) {\r\n  return (\r\n    <>\r\n      <div className=\"col-4 col-lg-2\"></div>\r\n      <div className=\"col-8 col-lg-3\">\r\n        <input placeholder=\"Filter Name\" {...props} />\r\n      </div>\r\n      <div className=\"d-none d-lg-block col-lg-7\"></div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FilterBar;\r\n","function ListHeader(props) {\r\n  return (\r\n    <div className=\"row employee-header\">\r\n      <p className=\"col-4 col-lg-2 font-weight-bold\">Image</p>\r\n      <p className=\"col-8 col-lg-3 font-weight-bold sort-field\" \r\n         data-sort={props.sortOpt} onClick={props.onClick}>\r\n        <span>Name </span>\r\n        <span><i className={`fas fa-sort sort-${props.sortOpt}`}></i></span>\r\n      </p>\r\n      <p className=\"d-none d-lg-block col-lg-2 font-weight-bold\">Phone</p>\r\n      <p className=\"d-none d-lg-block col-lg-3 font-weight-bold\">Email</p>\r\n      <p className=\"d-none d-lg-block col-lg-2 font-weight-bold\">Date-of-Birth</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListHeader;","function List(props) {\r\n  let thumbnail, first, last, phone, email, date;\r\n  return (\r\n    <div className=\"employee-list\">\r\n      {props.list.map((employee, idx) => {\r\n        // extract fields from data\r\n        ({picture:{thumbnail}, dob:{date}, email, name:{first,last}, phone} = employee);\r\n        return (\r\n          <div className={`row ${idx%2===0 ? 'bg-secondary' : ''}`} key={phone}>\r\n            <div className=\"col-4 col-lg-2\">\r\n              <img alt=\"thumbnail\" src={thumbnail} />\r\n            </div>\r\n            <p className=\"col-8 col-lg-3 \">{first} {last}</p>\r\n            <p className=\"d-none d-lg-block col-lg-2\">{phone}</p>\r\n            <p className=\"d-none d-lg-block col-lg-3\">{email}</p>\r\n            <p className=\"d-none d-lg-block col-lg-2\">{new Date(date).toLocaleDateString()}</p>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default List;","const API = {\r\n  getEmployees: function(cb) {\r\n    const url = 'https://randomuser.me/api/?nat=ca&inc=name,phone,email,dob,picture&results=50';\r\n    fetch(url)\r\n    .then(res => res.json())\r\n    .then(res => cb(res.results))\r\n    .catch(cb([]));\r\n  }\r\n}\r\n\r\nexport default API;\r\n","import React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport FilterBar from './components/FilterBar';\nimport ListHeader from './components/ListHeader';\nimport List from './components/List';\nimport API from './utils/API';\n\nfunction App() {\n  const [employeeList, setEmployeeList] = useState([]);\n  const [displayList, setDisplayList] = useState([]);\n  const [filter, setFilter] = useState('');\n  const [sortOpt, setSortOpt] = useState('none');\n\n  useEffect(function() {\n    // Call getEmployees(); use setEmployeeList() as callback function\n    API.getEmployees(setEmployeeList);\n  }, []);\n\n  function handleInputChange(evt) {\n    setFilter(evt.target.value);\n  }\n\n  function toggleSort(evt) {\n    // Event should bubble up to <p> tag (if heading/icon clicked)\n    // console.log('[toggleSort]', evt.target.nodeName, evt.currentTarget.nodeName);\n    if (evt.currentTarget.nodeName.toLowerCase() === 'p') {\n      let curSortOpt = evt.currentTarget.dataset.sort;\n      let newSortOpt;\n      if (curSortOpt === 'none') {\n        newSortOpt = \"asc\";\n      } else if (curSortOpt === 'asc') {\n        newSortOpt = 'desc';\n      } else if (curSortOpt === 'desc') {\n        newSortOpt = 'none';\n      } else {\n        newSortOpt = 'none';\n      }\n      setSortOpt(newSortOpt);\n    }\n  }\n\n  useEffect(function() {\n    function applyFilter(list) {\n      if (filter.trim() === '') return list;\n      return list.filter(e => e.name.first.toLowerCase().indexOf(filter.toLowerCase())>-1 ||\n                              e.name.last.toLowerCase().indexOf(filter.toLowerCase())>-1);\n    }\n\n    function applySort(list) {\n      if (sortOpt === 'none') {\n        return list;\n      } else {\n        return list.concat().sort(function(a, b) {\n          let aVal = `${a.name.first} ${a.name.last}`;\n          let bVal = `${b.name.first} ${b.name.last}`;\n          if (sortOpt === 'asc') {\n            return (aVal===bVal ? 0 : aVal < bVal ? -1 : 1);\n          } else { // 'desc'\n            return (aVal===bVal ? 0 : aVal < bVal ? 1 : -1)\n          }\n        });\n      }\n    }\n    // console.log(`[useEffect] sort(${sortOpt}) & filter(${filter})`);\n    // re-generate employee list if sort or filter changes\n    let filtered = applyFilter(employeeList);\n    let sortedFiltered = applySort(filtered);\n    setDisplayList(sortedFiltered);\n  }, [sortOpt, filter, employeeList]);\n\n  return (\n    <>\n      <Header />\n      <main className=\"container\">\n        <section className=\"row mb-1\">\n          <FilterBar value={filter} onChange={handleInputChange} />\n        </section>\n        <section>\n          <ListHeader sortOpt={sortOpt} onClick={toggleSort} />\n          <List list={displayList}/>\n        </section>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}